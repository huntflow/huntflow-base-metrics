[project]
name = "huntflow-base-metrics"
version = "0.2.0"
description = "Prometheus metrics for Huntflow services"
authors = [
    {name = "Developers huntflow", email = "developer@huntflow.ru"},
]
dependencies = [
    "prometheus-client>=0.21.0",
    "aiofiles>=24.1.0",
    "types-aiofiles>=24.1.0.20240626",
]
requires-python = ">=3.8"
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 100
indent-width = 4
target-version = "py38"

[tool.ruff.lint]
ignore = [
    "E501", # line-too-long
    "W191", # tab-indentation
]
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "E", # pycodestyle - Error
    "F", # Pyflakes
    "I", # isort
    "W", # pycodestyle - Warning
    "UP", # pyupgrade
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.pdm.scripts]
lint = "ruff check"
fmt = "ruff format ."

[tool.pytest.ini_options]
pythonpath = [
  ".", "src"
]
testpaths = ["tests"]
filterwarnings = [
    "ignore:.*litestar.contrib.attrs.AttrsSchemaPlugin*:DeprecationWarning"
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
mypy_path = "src"
disallow_untyped_defs = true
disallow_incomplete_defs = true
python_version = "3.8"
strict = false
show_error_codes = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = true
ignore_missing_imports = true

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "httpx>=0.28.1",
    "fastapi>=0.66.0",
    "aiohttp>=3.10.11",
    "litestar>=2.14.0",
    "ruff>=0.7.1",
    "mypy>=1.13.0",
]
